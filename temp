<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>uploader</title>
</head>
<body>
    <h1>my file uploader</h1>
    <input type="file" name="file" id="f">
    <button id="btnUpload">Upload..</button>
    <div id="divOutput"></div>
    <label for="myProgress">Downloading progress:</label>
    <progress id="myProgress" value="0" max="100"> </progress> 
    <script>
    const btnUpload = document.getElementById('btnUpload'); 
    const divOutput= document.getElementById("divOutput");
    const f = document.getElementById('f');
    const myProgress = document.getElementById("myProgress");

    btnUpload.addEventListener("click",()=>{
            const fileReader  = new FileReader();
            const theFile = f.files[0];

            fileReader.onload = async ev =>{
                const fileName =((Math.random() * 1000 )|0)+ theFile.name;
                const CHUNK_SIZE = 20000;
                const chunkCount = ev.target.result.byteLength / CHUNK_SIZE;
                for (let chunkId = 0; chunkId < chunkCount + 1; chunkId++) {
                    let chunk = ev.target.result.slice(chunkId * CHUNK_SIZE, (chunkId * CHUNK_SIZE)+ CHUNK_SIZE )
                    await fetch("http://192.168.0.121/upload",{
                        "method":"POST",
                        "headers":{
                        "content-type":"application/octet-stream",
                        "content-length":chunk.length,
                        "file-name":fileName,

                        },
                        "body": chunk
                    })
                    myProgress.setAttribute("value", ((chunkId * 100) / chunkCount) |0)
                    divOutput.textContent = ((chunkId * 100) / chunkCount) |0;
                }
               
                
            }
            fileReader.readAsArrayBuffer(theFile);
         
    })
    </script>
</body>
</html>

/**************/

import http from 'http'
import fs from 'fs'

const httpServer = http.createServer(onReq);
httpServer.on('listening',()=>console.log('listening'));
function onReq(req, res) {
    if(req.url === "/") {
        //res.statusCode = 200;
       // res.setHeader("Content-Type","text/html;charset=utf8")
        res.end(fs.readFileSync("index.html"));
        return
    }
    if(req.url === "/upload") {
      const fileName = req.headers["file-name"];
      req.on('data',chunk=>{
        fs.appendFileSync(fileName, chunk)
        console.log(`recived: ${chunk.length}`);
      })
      res.end("uploaded!")
      return;
    }

        res.statusCode = 404;
        res.setHeader("Content-Type","text/html;charset=utf8")
        res.end("<!DOCTYPE html><body><h2>Not found!</h2></body></html")

}


httpServer.listen(80,()=>console.log('...'));


/*******************************************1*****************************************************/
const http = require ('http');
const fs = require('fs');

const httpServer = http.createServer(onReq);
httpServer.on('listening',()=>console.log('listening'));
async function onReq(req, res) {

    if (req.method === 'POST' && req.url==='/upl') {
       
       /* req.on('data',chunk=>{
            console.log(chunk);
        })*/
        req.pipe(process.stdout);
        res.statusCode = 201;
        res.end();
        return;
    }

    if (req.method === 'GET' && req.url ==='/' ) {
         console.log(req.headers);
        let stat = await fs.promises.stat('index.html');
        res.statusCode = 200;
        res.setHeader('Content-Type','text/html,charset=utf8');
        res.setHeader('content-length', stat.size);
        res.write('');
        let str = fs.createReadStream('index.html');
        str.pipe(req.socket);
        return;
    }
    res.statusCode = 404;
    res.setHeader('content-type','text/plain,charset=utf8');
    res.end(`not found! \n ${new Date().toLocaleTimeString()}`);

}


httpServer.listen(80,()=>console.log('...'));

/****/

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>uploader</title>
</head>
<body>
<script>
let selected;
   function readFile (mode) {
// (A) GET SELECTED FILE
selected = document.getElementById("demoPick").files[0]
// (B) READ SELECTED FILE
let reader = new FileReader();
reader.addEventListener("load", async () => {
console.log(reader.result);
 await fetch("http://192.168.1.113/upl",{
                        "method":"POST",
                        "headers":{
                        "content-type":"application/octet-stream",
                        "content-length":reader.result.byteLength,
                        "file-name":selected.name,

                        },
                        "body":reader.result,
                    })

});

 reader.readAsArrayBuffer(selected); 

}
</script>
<input type="file" value="Choose File" id="demoPick"/>
<input type="button" value="Read As BIN" onclick="readFile(1)"/>

</body>
</html>
